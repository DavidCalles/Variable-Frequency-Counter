// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/22/2021 22:41:03"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          DCalles_Lab7_7Segments
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module DCalles_Lab7_7Segments_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg [9:0] clkFactor;
reg reset;
// wires                                               
wire [6:0] segment0;
wire [6:0] segment1;
wire [6:0] segment2;
wire [6:0] segment3;
wire [6:0] segment4;

// assign statements (if any)                          
DCalles_Lab7_7Segments i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.clkFactor(clkFactor),
	.reset(reset),
	.segment0(segment0),
	.segment1(segment1),
	.segment2(segment2),
	.segment3(segment3),
	.segment4(segment4)
);
initial 
begin 
#1000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #5000 1'b1;
	#5000;
end 

// reset
initial
begin
	reset = 1'b1;
end 
// clkFactor[ 9 ]
initial
begin
	clkFactor[9] = 1'b0;
end 
// clkFactor[ 8 ]
initial
begin
	clkFactor[8] = 1'b0;
end 
// clkFactor[ 7 ]
initial
begin
	clkFactor[7] = 1'b0;
end 
// clkFactor[ 6 ]
initial
begin
	clkFactor[6] = 1'b0;
end 
// clkFactor[ 5 ]
initial
begin
	clkFactor[5] = 1'b0;
	clkFactor[5] = #430000 1'b1;
end 
// clkFactor[ 4 ]
initial
begin
	clkFactor[4] = 1'b0;
end 
// clkFactor[ 3 ]
initial
begin
	clkFactor[3] = 1'b0;
end 
// clkFactor[ 2 ]
initial
begin
	clkFactor[2] = 1'b0;
end 
// clkFactor[ 1 ]
initial
begin
	clkFactor[1] = 1'b0;
end 
// clkFactor[ 0 ]
initial
begin
	clkFactor[0] = 1'b0;
	clkFactor[0] = #430000 1'b1;
end 
endmodule

